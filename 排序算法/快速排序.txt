#include <iostream>
#include <vector>

using namespace std;

// 交换函数，用于交换数组中两个元素的位置
template<typename T>
void swap(T& a, T& b) {
    T temp = a;
    a = b;
    b = temp;
}

// 划分函数，选择一个基准元素，将数组划分为左右两部分
template<typename T>
int partition(vector<T>& arr, int low, int high) {
    T pivot = arr[high];  // 选择最后一个元素作为基准元素
    int i = low - 1;

    for (int j = low; j < high; ++j) {
        if (arr[j] <= pivot) {
            ++i;
            swap(arr[i], arr[j]);
        }
    }

    swap(arr[i + 1], arr[high]);
    return i + 1;
}

// 快速排序函数
template<typename T>
void quickSort(vector<T>& arr, int low, int high) {
    if (low < high) {
        int pivotIndex = partition(arr, low, high);
        quickSort(arr, low, pivotIndex - 1);
        quickSort(arr, pivotIndex + 1, high);
    }
}

int main() {
    vector<int> numbers = { 5, 3, 4, 6, 2 };
    int n = numbers.size();

    quickSort(numbers, 0, n - 1);

    for (int num : numbers) {
        cout << num << " ";
    }
    cout << endl;

    return 0;
}